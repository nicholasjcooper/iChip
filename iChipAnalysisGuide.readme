Steps for the immunochip Analysis
---------------------------------

Analyst: Nick Cooper
Analysis Period: Dec 2013 - Feb 2014
Code: github.com/nicholasjcooper/iChip
Analysis data and files in: /chiswick/data/ncooper/iChipData/

Requirements:
*uva table of meta analysis results and exclusions
*'all.support.RData' support file, highly curated to ensure accuracy and uniqueness between rs-id and ichip-id
*sample exclusion lists
*iChip github directory of scripts
*access to raw ichip data
*access to ollie's chain file for 36-37 conversion
*access to chrisw's file for recwindow centimorgan distance lookups
*NB backups of ollie's chain file and chris's recwindow files are in the working directory under /ollieannot/ and /chrisannot/

1. run load-chip.R to extract the case-control data for each chromosome to files in the working directory

2. run gwAnalysis.R to perform the basic GWAS on the case-control data, this will produce a SNP QC datafile and a results file. Make sure chromosome X data is available and works correctly

3. use the function convert.OR.directions() to match the directions of the odds ratios in the case-control analysis with the directions from the UVA case-control analysis

4. use meta.me() function to update the meta-analysis p-values in the uva table and save this as the new object to import as the basis for the following script.

5. use getMetaTable1.R to calculate the top SNPs in each ichip region (and elsewhere) to produce an outline for table 1 (note this assumes you've already decided which SNPs to exclude so will need an iteration if doing from scratch)

6. manually check any table 1 SNPs that haven't been checked before for cloud qc. make sure you select the desired SNPs from lists which have equal p-values (e.g, LD=1). remove any non-sensical or double-up results if they arise due to the code not picking up these issues automatically.

7. once table1 index SNPs are established, feed this saved table into the script 'conditionalAnalysis.R'. This will add the conditional rows for table 1. Choose centimorgan level that makes sense, e.g, 0.1cm. Any larger than this will create issues with overlapping regions. ensure bonferroni is calibrated at least the first time the script is run.

8. run the 'indistinguishableAnalysis.R' script using the SNP names from table 1. save this 'all.results' list, it will need modification later. The first run will impute any missing data, so can take a really long time (perhaps 3 hours, etc). Any subsequent analyses may also need to update these imputations, though generally they'll reuse existing imputation where possible. using a smaller centimorgan window will reduce the number of SNPs to analyse and impute, and in the case of conditional analyses will affect the bonferroni threshold.

9. edit the setup file: 'conditionalTests.csv' expresses the conditional tests to run to populate relevant rows of table 1. Each index SNP should be tested conditionally on all it's conditional SNPs. Each conditional SNP should be tested conditional on its index SNP and any other conditional SNPs from the same iChip region. There should be one row for each index snp with conditional SNPS and one row for each conditional snp in this setup file. 

10. edit the setup file: spectable1bf.csv should have one row for every SNP in table 1, and should be coded 1 in the MULTI column for any that are either conditional, or as index snps have a conditional hit. Every other singleton snp should be coded 0.

11. run the 'indistinguishableCondAnalysis.R' using the setup files from 9&10 above. This will produce an 'all.results' object'.

12. note the locations of the binary files with the 'all.results' objects from steps 11 & 8. use the make.final.lists() function to generate final indistinguishable and conditional bayes factor lists, by entering these two file locations as arguments. The indistinguishable list will be listed by chromosome first, then index SNP and should have an entry for every index snp in table 1. The conditional list will just be listed by SNP id, and should have an entry for every conditional snp in table 1.

13. So, table 1, and the two lists from 12 should form the main 3 files of results for this project.

NB: note that a wealth of functions to aid in manipulating the data from this project are contained within the iFunctions.R, vsmaxfunctions.R files, and also the geneticsFunctions.R script from another project, github.com/nicholasjcooper/plumbcnv


